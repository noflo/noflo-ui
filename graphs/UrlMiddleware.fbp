INPORT=Dispatch.IN:IN
OUTPORT=Passed.OUT:PASS
OUTPORT=NewActions.OUT:NEW

'noflo:ready,storage:ready,application:redirect,application:hash,storage:stored:project' -> ROUTES Dispatch(ui/DispatchAction)
Dispatch PASS -> IN Passed(core/Repeat)

# New actions generated by this middleware
'application:url' -> ACTION ApplicationUrlAction(ui/SetAction) OUT -> IN NewActions(core/Merge)
'application:hash' -> ACTION ApplicationHashAction(ui/SetAction) OUT -> IN NewActions(core/Merge)
# In addition the Router component creates different actiond based on URL hash
ApplicationRouteAction(ui/SetAction) OUT -> IN NewActions
# Actions manipulated and passed on by this middleware
'storage:stored:project' -> ACTION StoredProjectAction(ui/SetAction) OUT -> IN Passed

# Application start-up
Dispatch HANDLE[0] -> IN NofloReady(core/Split)
NofloReady OUT -> IN Passed
NofloReady OUT -> IN InitialURL(ui/GetUrl)
# Send application URL out
InitialURL OUT -> ApplicationUrlAction

# Subscribe to hash changes and generate new actions
Dispatch HANDLE[1] -> START ListenHash(interaction/ListenHash)
ListenHash INITIAL -> URL HashToAction(ui/Router)
ListenHash CHANGE -> URL HashToAction
HashToAction ACTION -> ACTION ApplicationRouteAction
HashToAction PAYLOAD -> IN ApplicationRouteAction

# URL redirection. Changes URL and as side-effect stops app
Dispatch HANDLE[2] -> IN Redirect(ui/SetUrl)

# URL hash redirection
Dispatch HANDLE[3] -> IN SetHash(ui/SetHash)

# Saving a project should cause project to be opened when not in project view
Dispatch HANDLE[4] -> IN OpenProject(ui/OpenProject)
OpenProject PASS -> IN StoredProjectAction
OpenProject OPEN -> IN ApplicationHashAction
